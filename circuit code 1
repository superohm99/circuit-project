const int IR_LED_PIN = 7;   // IR LED pin
const int IR_RECEIVER_PIN = A5;  // IR receiver pin
const int BUZZER_PIN = 8;  // Buzzer pin
const int DEBOUNCE_DELAY = 50; // Debounce delay in milliseconds
int check = false;
int check1 = false;
int check2= false;
int check3 = false;
int state_pass =0;
int col_check =7;
int get_check =0;


#include <Keypad.h>
const byte ROWS = 4; //four rows
const byte COLS = 4; //three columns
char keys[ROWS][COLS] = {
  {'1', '2', '3', 'A'},
  {'4', '5', '6', 'B'},
  {'7', '8', '9', 'C'},
  {'*', '0', '#', 'D'}
};
byte rowPins[ROWS] = {22, 24, 26, 28};
byte colPins[COLS] = {30, 32, 34, 36};
Keypad keypad = Keypad( makeKeymap(keys), rowPins, colPins, ROWS, COLS );

int log_password[7] = {5,0,1,2,6,9,1};
int password[7];

#include <LCD_I2C.h>
#include "DHT.h"
#define DHTPIN 2     // what digital pin we're connected to

// Uncomment whatever type you're using!
//#define DHTTYPE DHT11   // DHT 11
#define DHTTYPE DHT11   // DHT 22  (AM2302), AM2321
DHT dht(DHTPIN, DHTTYPE);

LCD_I2C lcd(0x27, 16, 2); // Default address of most PCF8574 modules, change according

int debounceAnalogRead(int pin) {
  int val = analogRead(pin);
  delay(DEBOUNCE_DELAY);
  int newVal = analogRead(pin);
  if (abs(val - newVal) < 10) {
    return newVal;
  } else {
    return val;
  }
}

void setup() {
  pinMode(IR_LED_PIN, OUTPUT);
  pinMode(IR_RECEIVER_PIN, INPUT);
  pinMode(BUZZER_PIN, OUTPUT);
  Serial.begin(9600);
  lcd.begin(); 
  lcd.backlight();
}

void loop() {
  if(digitalRead(BUZZER_PIN) or check){

    if(check1==false){
    lcd.setCursor(0,0);
    lcd.print("INSERT PASSWORD:))");
    delay(1000);
    lcd.clear();
    }
    check = true;
    check1 = true;
    char key = keypad.getKey();
//    Serial.println(key);

    if(digitalRead(key)==0 and state_pass <=6 and check2 == false){
      password[state_pass] = key;
      state_pass+=1;
      Serial.println(password[7]);
    }

    if(check3==false){
      Serial.println(password[7]);
    for(int i;i<7;i++){
      if(password[i]==log_password[i])
        get_check +=1;
      }
      check3=true;
    }

    if(col_check == get_check){
      check2 = true;
      Serial.println("Success");
      
      }

    //numpad
//    if(check1 == true){
//    char key = keypad.getKey();
//    if (key != NO_KEY) {
//      Serial.println(key);
//    }
//    for (int i = 0; i < 7; i++) {
//      password[i] = key ;
//    }
//
//    Serial.print(password[7]);
//    
  digitalWrite(BUZZER_PIN, LOW);
//    
  }
 
  
  if(check == false){
    lcd.setCursor(2,0);
    lcd.print("Secure Door :))");
    delay(1000);
    lcd.clear();
    
    Serial.println(analogRead(IR_RECEIVER_PIN));
    digitalWrite(IR_LED_PIN, HIGH);
    delayMicroseconds(100);  // Replace with your desired IR signal timing
    digitalWrite(IR_LED_PIN, LOW);
    delay(10);  // Wait for receiver to settle
  
    // Read status of IR receiver with debouncing
    int receiverValue = debounceAnalogRead(IR_RECEIVER_PIN);
  
    // If the receiver value is high, turn on the buzzer
    if (receiverValue > 500) {
      digitalWrite(BUZZER_PIN, HIGH);
      Serial.println("Buzzer ON");
    } else {
      digitalWrite(BUZZER_PIN, LOW);
      Serial.println("Buzzer OFF");
    }
    delay(100);  // Replace with your desired loop delay
  }
}
